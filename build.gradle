plugins {
    id 'java'
    id 'eclipse'
    id 'application'
    id 'org.openjfx.javafxplugin'      version '0.0.13'
    id 'org.beryx.jlink'               version '2.25.0'
    id 'com.github.ben-manes.versions' version '0.23.0'
}

// Application Configuration
ext {
    appName = "FXApp"
    appLauncher = "fxapp"
    appPackaging = "fxapp"
    appModuleName = "fxapp"
    appMainClass = "fxapp.App"
}

application {
    mainModule = "${project.ext.appModuleName}"
    mainClass = "${project.ext.appMainClass}"
}

repositories {
    mavenCentral()
}

javafx {
    version = '17'
    modules = [
       'javafx.base',
       'javafx.graphics',
       'javafx.controls'
    ]
}

jlink {
    imageZip = project.file("${buildDir}/distributions/${appPackaging}-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = "${appLauncher}"
    }
}

task dist {
    dependsOn clean, jlinkZip
    description "Calls clean and then jlinkZip [default]"
}

defaultTasks 'dist'

if (project.hasProperty('debugRun') && project.debugRun as boolean) {
    run {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=*:5005'
    }
}

eclipse {
    classpath {
        containers 'org.eclipse.buildship.core.gradleclasspathcontainer'
        file {
            whenMerged {
                entries.findAll { it.properties.kind.equals('lib') && !it.properties.path.contains("junit") }.each {
                    it.entryAttributes['module'] = 'true'
                }
                entries.findAll { it.properties.path.startsWith('org.eclipse.jdt.launching.JRE_CONTAINER') }.each {
                    it.entryAttributes['module'] = 'true'
                }

            }
        }
    }
}
